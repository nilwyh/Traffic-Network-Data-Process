import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.OutputStreamWriter;
import java.util.ArrayList;
import java.util.Arrays;

import javax.swing.JOptionPane;

import com.linuxense.javadbf.DBFField;
import com.linuxense.javadbf.DBFReader;


public class PReader {

	ArrayList<Point> data=new ArrayList<Point>();
	ArrayList<Line> datal=new ArrayList<Line>();
	Point center;
	double r;
	int n;
	int[] num;
	
	
	
	public ArrayList<Line> readLine(String path){
		
		InputStream fis = null; 
        try {  
            // 读取文件的输入流  
            fis = new FileInputStream(path);  
            // 根据输入流初始化一个DBFReader实例，用来读取DBF文件信息  
            DBFReader reader = new DBFReader(fis);  
            // 调用DBFReader对实例方法得到path文件中字段的个数  
            int fieldsCount = reader.getFieldCount();  
//            System.out.println(fieldsCount);            
            // 取出字段信息  
            for (int i = 0; i < fieldsCount; i++) {  
                DBFField field = reader.getField(i);  
                System.out.println(field.getName());  
            }  
            Object[] rowValues;  
            // 一条条取出path文件中记录 
            int first=-1;
            Point pre=null;
            while ((rowValues = reader.nextRecord()) != null) {  
                int next=(int)((double)rowValues[1]);
            	if (first==next){
                    datal.add(new Line(pre,new Point((float)rowValues[4], (float)rowValues[5])));
                    
            	}else{
            		pre=new Point((float)rowValues[4], (float)rowValues[5]);
            		first=next;
            	}
            	
            }  
        } catch (Exception e) {  
            e.printStackTrace();  
        } finally {  
            try {  
                fis.close();  
            } catch (Exception e) {  
            }  
        }
		return datal;  
	}
	
	public ArrayList<Point> readPoint(String path){
		InputStream fis = null; 
        try {  
            // 读取文件的输入流  
            fis = new FileInputStream(path);  
            // 根据输入流初始化一个DBFReader实例，用来读取DBF文件信息  
            DBFReader reader = new DBFReader(fis);  
            // 调用DBFReader对实例方法得到path文件中字段的个数  
            int fieldsCount = reader.getFieldCount();  
//            System.out.println(fieldsCount);            
            // 取出字段信息  
            for (int i = 0; i < fieldsCount; i++) {  
                DBFField field = reader.getField(i);  
                System.out.println(field.getName());  
            }  
            Object[] rowValues;  
            // 一条条取出path文件中记录  
            while ((rowValues = reader.nextRecord()) != null) {  
                
            	//for (int i = 0; i < rowValues.length; i++) {  
                data.add(new Point((float)rowValues[1], (float)rowValues[2]));
                  
            	
            }  
        } catch (Exception e) {  
            e.printStackTrace();  
        } finally {  
            try {  
                fis.close();  
            } catch (Exception e) {  
            }  
        }
		return data;  
    }
	
}
